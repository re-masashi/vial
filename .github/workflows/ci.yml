name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [stable, beta]
    steps:
    - uses: actions/checkout@v4
    - name: Install ${{ matrix.toolchain }}
      run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
    - name: Install clippy and rustfmt
      run: rustup component add clippy rustfmt
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Check format
      run: cargo fmt --all -- --check
    - name: Run tests
      run: cargo test
    - name: Run clippy
      run: cargo clippy -- -D warnings

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        toolchain: [stable]
    steps:
    - uses: actions/checkout@v4
    - name: Install ${{ matrix.toolchain }}
      run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
    - name: Install clippy and rustfmt
      run: rustup component add clippy rustfmt
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      run: cargo build --verbose --release

  rust-version-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-version: [1.80, stable, beta]
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust ${{ matrix.rust-version }}
        run: rustup install ${{ matrix.rust-version }} && rustup default ${{ matrix.rust-version }}
      - name: Install clippy and rustfmt
        run: rustup component add clippy rustfmt
      - name: Check syntax
        run: cargo check --all-targets
      - name: Run tests on latest
        if: matrix.rust-version == 'stable' || matrix.rust-version == 'beta'
        run: cargo test --all-targets